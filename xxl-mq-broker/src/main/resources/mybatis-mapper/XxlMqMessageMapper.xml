<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xxl.mq.broker.dao.IXxlMqMessageDao" >
	
	<resultMap id="XxlMqMessage" type="com.xxl.mq.client.message.XxlMqMessage" >
		<result column="id" property="id" />
		<result column="topic" property="topic" />
	    <result column="group" property="group" />
	    <result column="data" property="data" />
	    <result column="status" property="status" />
	    <result column="retryCount" property="retryCount" />
	    <result column="shardingId" property="shardingId" />
		<result column="effectTime" property="effectTime" />
		<result column="addTime" property="addTime" />
		<result column="log" property="log" />
	</resultMap>

	<sql id="Base_Column_List">
		t.`id`,
		t.`topic`,
		t.`group`,
		t.`data`,
		t.`status`,
		t.`retryCount`,
		t.`shardingId`,
		t.`effectTime`,
		t.`addTime`,
		t.`log`
	</sql>
	
	<select id="pageList" parameterType="java.util.HashMap" resultMap="XxlMqMessage">
		SELECT <include refid="Base_Column_List" />
		FROM XXL_MQ_MESSAGE AS t
		<trim prefix="WHERE" prefixOverrides="AND | OR" >
			<if test="topic != null and topic != ''">
				AND t.topic like CONCAT(CONCAT('%', #{topic}), '%')
			</if>
			<if test="status != null and status != ''">
				AND t.status = #{status}
			</if>
		</trim>
		ORDER BY t.id DESC
		LIMIT #{offset}, #{pagesize}
	</select>
	
	<select id="pageListCount" parameterType="java.util.HashMap" resultType="int">
		SELECT count(1)
		FROM XXL_MQ_MESSAGE AS t
		<trim prefix="WHERE" prefixOverrides="AND | OR" >
			<if test="topic != null and topic != ''">
				AND t.topic like CONCAT(CONCAT('%', #{topic}), '%')
			</if>
			<if test="status != null and status != ''">
				AND t.status = #{status}
			</if>
		</trim>
	</select>

	<delete id="delete" parameterType="java.lang.Integer">
		DELETE FROM XXL_MQ_MESSAGE
		WHERE id = #{id}
	</delete>

	<update id="update" parameterType="java.util.HashMap" >
		UPDATE XXL_MQ_MESSAGE AS t
		SET
			t.`data` = #{message.data},
			t.`status` = #{message.status},
			t.`retryCount` = #{message.retryCount},
			t.`effectTime` = #{message.effectTime},
			t.`log` = CONCAT(t.`log`, #{message.log})
		WHERE t.`id` = #{message.id}
	</update>

	<insert id="save" parameterType="com.xxl.mq.client.message.XxlMqMessage" useGeneratedKeys="true" keyProperty="id" >
		INSERT INTO XXL_MQ_MESSAGE (
			`topic`,
			`group`,
			`data`,
			`status`,
			`retryCount`,
			`shardingId`,
			`effectTime`,
			`addTime`,
			`log`
		) VALUES
		<foreach collection ="messageList" item="messageItem" index= "index" separator =",">
			(
				#{messageItem.topic},
				#{messageItem.group},
				#{messageItem.data},
				#{messageItem.status},
				#{messageItem.retryCount},
				#{messageItem.shardingId},
				#{messageItem.effectTime},
				NOW(),
				#{messageItem.log}
			)
		</foreach >
		<selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>

	<select id="pullNewMessage" parameterType="java.util.HashMap" resultMap="XxlMqMessage">
		SELECT <include refid="Base_Column_List" />
		FROM XXL_MQ_MESSAGE AS t
		WHERE 	t.topic = #{topic}
			AND t.group = #{group}
			AND t.status = #{newStatus}
			AND t.effectTime <![CDATA[ < ]]> NOW()
			<if test="consumerTotal > 1">
				AND (
					(
						t.shardingId <![CDATA[ = ]]> 0
						AND
						MOD(t.id, #{consumerTotal}) = #{consumerRank}
					)
					OR
					(
						t.shardingId <![CDATA[ > ]]> 0
						AND
						MOD(t.shardingId, #{consumerTotal}) = #{consumerRank}
					)
				)
			</if>
		ORDER BY t.id DESC
		LIMIT #{pagesize}
	</select>

	<update id="lockMessage" parameterType="java.util.HashMap" >
		UPDATE XXL_MQ_MESSAGE AS t
		SET
			t.status = #{toStatus},
			t.`log` = CONCAT(t.`log`, #{appendLog})
		WHERE id = #{id} AND t.status =  #{fromStatus}
	</update>

	<update id="updateStatus" parameterType="java.util.HashMap" >
		UPDATE XXL_MQ_MESSAGE
		SET
			status =
				<foreach collection="messageList" item="messageItem" index="index" separator=" " open="case id" close="end">
					when #{messageItem.id} then #{messageItem.status}
				</foreach>
			,
			log =
				<foreach collection="messageList" item="messageItem" index="index" separator=" " open="case id" close="end">
					when #{messageItem.id} then CONCAT(log, #{messageItem.log})
				</foreach>
		WHERE id IN
			<foreach collection="messageList" item="messageItem"  index="index" separator="," open="(" close=")">
				#{messageItem.id}
			</foreach>
	</update>

	<update id="updateRetryCount" parameterType="java.util.HashMap" >
		UPDATE XXL_MQ_MESSAGE
		SET
			status = #{newStatus},
			retryCount = retryCount - 1 ,
			log = CONCAT(log, #{appendLog})
		WHERE status =  #{failStatus}
			AND retryCount <![CDATA[ > ]]> 0
	</update>

</mapper>